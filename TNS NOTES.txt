DAY 2

Core Java 8 features:-

DATE TIME API
Stream API
Lambda Expression



All names starting from S.
SELECT * FROM customer WHERE Name like 'S%'


All names ending from S.
SELECT * FROM customer WHERE Name like '%j'


To order in ascending order.
SELECT * FROM customer ORDER BY name;


To order in descending order.
SELECT * FROM customer ORDER BY name DESC;

To retrieve MAX value from specific column of table.	
SELECT MAX(price) FROM customer;


To retrieve MIN value from specific column of table.	
SELECT MIN(price) FROM customer;


To retrieve 2nd highest price from customer table.
SELECT MAX(price) FROM customer WHERE price NOT IN (SELECT MAX(price) FROM customer) ;


To see the count.
SELECT COUNT(name) FROM customer;


Both conditions should be true.
SELECT * FROM customer WHERE id = 102 AND price = 150.5;


To join 2 tables.
SELECT * FROM student CROSS JOIN customer;



What is primary and foreign key?
primary is unique id 
for is primary key for another table


difference between delete truncate and drop?
difference between alter and update?

what is cross join?
what is self join?


Day 3:=-


run code line by line - jvm can't see
jvm plstform depen to indep?

jdk - can see in eclipse

jre - contains jvm and other libraries

variables:- 
naming convention:-
1. start with alphabet or underscore
2. no special character apart from underscore
3. 0-9 digits
4. can write in uppercase/lowercase/mixure of both also
5. no any space can be used


data types:- 


1. byte  -128 to 127
2. short -32768  to 32767
3. int -2147483648 to 2147483647
4. long - number increasing above 10 digits use long
	and use L at end
	long x = 2451458221L;



rules while writing [package name:-
writing package name use lower case
no special character
no use of keywords



Day 3:-

Logical operators
&& - both condition true
|| - any one true
! - does opposite


Bitwise 
& - AND - gives TRUE if both conditions are TRUE
^ - XOR - gives TRUE if both conditions are SAME
| - OR  - gives TRUE if any one condition is TRUE
<< - LEFT-SHIFT       Formula --> a*2^b
>> - RIGHT-SHIFT


Increment Operator :- 
PreIncrement = ++x   --> first increment then use
PostIncrement = x++   --> first use then increase if use next time then use new increased value

questions:- 
1. take input from user age, weight if both conditions satisfied then donate --> you can use if-else


Day:- 6

decision making --> if_else; cascading if_else; nested if; switch
looping/iteration --> for; while; do_while
Jumping --> break; continue; return
how many digit in given number? do while	



Day:- 7 OOPs

why oop? --> OOP is faster and easier to execute. OOP provides a clear structure for the programs. OOP helps to keep the Java code DRY "Don't Repeat Yourself", and makes the code easier to maintain, modify and debug.

to increase flexibility and maintainbility
object is real world entity

Encapsulation is a process of wrapping of data in a single unit. 
in encapsulation all members are private
by using private data members we can achieve encapsulation


for inheritance use "extends" keyword


if return type use int
if no return type use void

Abstraction --> Hides irrelevant data

access modifier --> public, private, protected, default

constructor has no return type
if data members in class and parameters in constructors are same use 'this' keyword.


toString is ovrRide method
difference between abstract and interface


class is a group of objects which have common properties. It is a template or blueprint from which objects are created.
object is a real-world entity. 
object is a member (also called an instance) of a Java class. 
this keyword refers to the current object in a method or constructor.
Constructors are almost similar to methods except for two things - its name is the same as the class name and it has no return type.

Private: The access level of a private modifier is only within the class. It cannot be accessed from outside the class.
Default: The access level of a default modifier is only within the package. It cannot be accessed from outside the package. If you do not specify any access level, it will be the 	 	 default.
Protected: The access level of a protected modifier is within the package and outside the package through child class. If you do not make the child class, it cannot be accessed from 	 	 outside the package.
Public: The access level of a public modifier is everywhere. It can be accessed from within the class, outside the class, within the package and outside the package.


Default Constructor - a constructor that is automatically created by the Java compiler if it is not explicitly defined.
Parameterized constructor - a constructor that accepts arguments. 


package is group of classes or group of packages or interface for security purpose. also used for searching and locating and naming convention. and used for data encpsulation.
lang, util, awt are build in packages
org.tnsif.operators is user defined package


Day 8 :- 

setter is used to set a value
getter is used to return the value



Day 9 :- Inheritance

obj of one class will achieve properties of another class.
 --> when any 2 class have same method then compiler gets confused which to access it is ambiguity so multiple inheritance not possible.

process of acquiring properties and methods from one class to another class
main objective is code extensibility whenever we are extending the class automatically the code gets reused.

what is use of super? --> The super keyword can also be used to invoke parent class method. It should be used if subclass contains the same method as parent class. In other words, it is used if method is overridden.

overriding --> If subclass (child class) has the same method as declared in the parent class, it is known as method overriding in Java. 

Day 10 :- Challenges

Day 11 :- 
instance variable --> 

uses of this keyword
this keyword is used to distinguish between data member and paramter
used to refer instance variable of current class
used to invoke the current class constructor
can be passsed as an argument in method call
can be passsed as an argument in constructor call
can be used to return the current call 


final keyword is used to restrict data from user
final keyword with variable --> if declared any variable as final we cannot change it's value it's final
final keyword with method --> if we use final keyword with any method we cannot override that method 
final keyword with class --> if we use final keyword with any class we cannot use the inheritance concept.



Day 12 :- 

super() keyword is used to refer immediate parent class instance variable.
super() keyword is used to invoke immediate parent class method
super() keyword is used to invoke immediate parent class constructor


static keyword :


any instance/variable outside main function then use static keyword to access it.
static method if any method outside the main function to call thaat method we use static
inside static we can enable only for static variable




Day 13 : -

Polymorphism --> means many forms
allows the object to behave differently in different conditions

types : - 1. compile time polymorphir, --> static(or early) binding 
2. runtime polymorphism --> dynamic(or late) binding


method overriding --> same method and same parameters	





























